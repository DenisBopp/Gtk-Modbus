!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!D	M,module	/modules/
!_TAG_KIND_DESCRIPTION!D	T,template	/templates/
!_TAG_KIND_DESCRIPTION!D	V,version	/version statements/
!_TAG_KIND_DESCRIPTION!D	X,mixin	/mixins/
!_TAG_KIND_DESCRIPTION!D	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!D	c,class	/classes/
!_TAG_KIND_DESCRIPTION!D	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!D	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!D	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!D	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!D	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!D	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!D	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!D	u,union	/union names/
!_TAG_KIND_DESCRIPTION!D	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!D	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/dsilva/Projetos/CPP/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
${TARGET}	Makefile	/^${TARGET}: ${OBJS}$/;"	t
%.o	Makefile	/^%.o: %.cpp ${DEPS}$/;"	t
CXX	Makefile	/^CXX=g++ -std=c++17$/;"	m
DEPS	Makefile	/^DEPS=TMConn.hpp$/;"	m
LD	Makefile	/^LD=g++$/;"	m
OBJS	Makefile	/^OBJS=main.o tmConn.o$/;"	m
TARGET	Makefile	/^TARGET=app$/;"	m
TMCONN_H	TMConn.hpp	/^#define TMCONN_H$/;"	d
TMConn	TMConn.hpp	/^class TMConn : public Gtk::Window {$/;"	c
TMConn	tmConn.cpp	/^TMConn::TMConn() : m_box1{Gtk::Orientation::ORIENTATION_VERTICAL}{$/;"	f	class:TMConn
clean	Makefile	/^clean:$/;"	t
m_alignment1	TMConn.hpp	/^    Gtk::Alignment m_alignment1;$/;"	m	class:TMConn	typeref:typename:Gtk::Alignment
m_box1	TMConn.hpp	/^    Gtk::Box m_box1;$/;"	m	class:TMConn	typeref:typename:Gtk::Box
m_button	TMConn.hpp	/^    Gtk::Button m_button;$/;"	m	class:TMConn	typeref:typename:Gtk::Button
m_entry	TMConn.hpp	/^    Gtk::Entry m_entry;$/;"	m	class:TMConn	typeref:typename:Gtk::Entry
m_fixed	TMConn.hpp	/^    Gtk::Fixed m_fixed;$/;"	m	class:TMConn	typeref:typename:Gtk::Fixed
m_frame	TMConn.hpp	/^    Gtk::Frame m_frame;$/;"	m	class:TMConn	typeref:typename:Gtk::Frame
m_label	TMConn.hpp	/^    Gtk::Label m_label;$/;"	m	class:TMConn	typeref:typename:Gtk::Label
main	main.cpp	/^int main(int argc, char** argv){$/;"	f	typeref:typename:int
set_hierarchy	tmConn.cpp	/^void TMConn::set_hierarchy(){$/;"	f	class:TMConn	typeref:typename:void
